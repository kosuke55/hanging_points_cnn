<?xml version="1.0" encoding="utf-8"?>
<launch>
  <arg name="input_color" value="/camera/color/image_rect_color_repub" />
  <arg name="input_depth" value="/camera/aligned_depth_to_color/image_raw_repub" />
  <arg name="input_mask" value="/point_indices_to_mask_image/output" />
  <arg name="camera_info" value="/camera/color/camera_info" />
  <arg name="camera_frame" value="r_gripper_tool_frame" />
  <arg name="world_frame" value="base_link" />
  <arg name="save_raw_image" value="true" />
  <arg name="save_dir" value="save_dir_rosabg_handeye/" />
  <arg name="service_time_file" value="$(find hanging_points_generator)/create_mesh_handeye_sample_rosbag/service_time_list.txt" />
  <arg name="gui" default="true" />
  <arg name="autosize" default="true" />

  <arg name="hp_camera_info" default="/apply_mask_image_color/output/camera_info" />
  <arg name="hp_rgb" default="/apply_mask_image_color/output" />
  <arg name="hp_depth" default="/apply_mask_image_depth/output" />
  <arg name="gpu" default="0" />
  <arg name="predict_depth" default="true" />

  <arg name="manager" default="d415_nodelet_manager" />
  <node name="$(arg manager)" pkg="nodelet" type="nodelet" args="manager" output="screen" cwd="node" respawn="true"></node>

  <param name="/use_sim_time" value="true" />

  <node name="rosbag_play" pkg="rosbag" type="play" args="$(find hanging_points_generator)/create_mesh_handeye_sample_rosbag/create_mesh_handeye.bag --clock -r 1"></node>

  <include file="$(find hanging_points_generator)/ros/launch/republish_image_handeye.launch" />

  <node name="expand_mask" pkg="mask_utils" type="expand_mask.py" output="screen" cwd="node">
    <remap from="~input" to="$(arg input_mask)" />
    <rosparam>
      padding: 20
    </rosparam>
  </node>

  <node name="apply_mask_image_color" pkg="nodelet" type="nodelet" args="load jsk_perception/ApplyMaskImage $(arg manager)" output="screen" respawn="true">
    <remap from="~input" to="$(arg input_color)" />
    <remap from="~input/mask" to="/expand_mask/output" />
    <remap from="~input/camera_info" to="$(arg camera_info)" />
    <rosparam>
        approximate_sync: false
        queue_size: 300
        clip: true
        use_rectified_image: false
      </rosparam>
  </node>

  <node name="tmp_apply_mask_image_depth" pkg="nodelet" type="nodelet" args="load jsk_perception/ApplyMaskImage $(arg manager)" output="screen" respawn="true">
    <remap from="~input" to="$(arg input_depth)" />
    <remap from="~input/mask" to="/expand_mask/output" />
    <remap from="~input/camera_info" to="$(arg camera_info)" />
    <rosparam>
        approximate_sync: false
        queue_size: 300
        clip: true
        use_rectified_image: false
      </rosparam>
  </node>

  <node name="apply_mask_image_mask" pkg="nodelet" type="nodelet" args="load jsk_perception/ApplyMaskImage $(arg manager)" output="screen" respawn="true">
    <remap from="~input" to="$(arg input_mask)" />
    <remap from="~input/mask" to="/expand_mask/output" />
    <remap from="~input/camera_info" to="$(arg camera_info)" />
    <rosparam>
        approximate_sync: false
        queue_size: 300
        clip: true
        use_rectified_image: false
      </rosparam>
  </node>

  <node name="apply_mask_image_depth" pkg="nodelet" type="nodelet" args="load jsk_perception/ApplyMaskImage $(arg manager)" output="screen" respawn="true">
    <remap from="~input" to="tmp_apply_mask_image_depth/output" />
    <remap from="~input/mask" to="/apply_mask_image_mask/output" />
    <remap from="~input/camera_info" to="$(arg camera_info)" />
    <rosparam>
        approximate_sync: false
        queue_size: 300
        clip: false
        use_rectified_image: false
      </rosparam>
  </node>

  <node name="hanging_points_detector" pkg="hanging_points_cnn" type="hanging_points_detector.py" output="screen">

    <remap from="~camera_info" to="$(arg hp_camera_info)" />
    <remap from="~rgb_raw" to="$(arg input_color)" />
    <remap from="~rgb" to="$(arg hp_rgb)" />
    <remap from="~depth" to="$(arg hp_depth)" />

    <rosparam subst_value="true">
      gpu: $(arg gpu)
      predict_depth: $(arg predict_depth)
      pretrained_model : "/media/kosuke/SANDISK/hanging_points_net/checkpoints/gray/hpnet_latestmodel_20200922_1626.pt"
    </rosparam>
  </node>

  <group if="$(arg gui)">
    <node name="image_viewer" pkg="image_view" type="image_view">
      <remap from="image" to="$(arg input_color)" />
      <rosparam subst_value="true">
      autosize: $(arg autosize)
    </rosparam>
    </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find hanging_points_cnn)/ros/rviz/sample_hp.rviz" />
  </group>

</launch>
